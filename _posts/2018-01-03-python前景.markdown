---
layout: article
title:  "python未来十年的前景"
date:   2017-12-01 22:07:50 +0800
categories: Jekyll GitHub update
image:
  teaser: gembox.png
  feature: gembox.png
---
用python已经不是装逼了确实没有错，但现在逼界的风向是要反python吗我想不通的是，未来10年，如果不是python/ruby这样的语言发展的时机，那会是什么语言我来说说对上述所谓问题我的看法吧：
- 1. 兼容性问题2to3的问题让社区不少人寒了心，但guido坚持要这样做，因为他认为这是python追求简单优雅所必须要做的。

  对于没有历史包袱的项目来说，直接选择用python3000肯定是明智的。对于已有项目，2to3、six这样的工具也是可以解决绝大部分问题。
  
  大版本内的兼容性问题我还没遇到过，不知道有啥案例让我学习学习的。对于活跃的开源项目，小的兼容性问题不容易成为项目发展的瓶颈。
  
  而对于不活跃或者设计较差的项目，即使是使用其它语言，时间长了，也一般不会是兼容性影响它的使用。
  
  （某司的web后台几年前大部分是C++写的，理论上讲不会有兼容性问题，但是现在当有需求实现时，却没有人想去维护那一整片一整片的业务逻辑和不同的前同事造的轮子。）
  
   如果说，你想写一个完美的能立即稳定下来并且再也不需要维护的软件，那还是用C语言吧（换言之，这样的东西python里不都是用C写的吗）
   
   总的来说，有时候确实没怎么在python上吃过兼容性的亏，反而对C++大包大揽时留下的坑深恶痛绝
   
- 2. python的库恶心哪个库？有C++的库恶心吗，有java的库恶心吗

- 3. python的使用场合前面已经说过，guido是个有理想的人，他希望python在任何一个领域都能牛逼起来，所以python才会强调简单、通用，让你干啥都能想到它。

  在实际上，python也未能做到处处通杀，甚至还没能做到在某个领域的权威（在云计算领域，python应该已经快了），基于语言本身的特点，目前在运维、大数据、云计算、web、科学计算上都还混得可以
- 4. 找工作积重难返，python更多的会在某种口味的创业团队使用，国内的大公司不大会直接招python程序员，像@白如冰 说的那样。

  从社区上的招聘广告来看，大部分的岗位需求是web后台和运维系统开发的，web后台又有大部分是要求django的。
  
  python的水不深，单靠对语言本身的考察，难以分清水平高低，于是，要么需要你有丰富的经验，要么你有坚强的毅力（比如C++学得很好）最后，补充下，我极少在windows下用python（除了靠python在淘宝上秒杀了个手机），但每次一用就觉得别扭，也许这也是需要考虑的部分吧
  
- 5. 逼格
 - (1) 用什么语言都不能证明逼格，包括汇编，也包括lisp/haskell。
 - (2) 在适当的场合用适当的工具，解除耦合、减少重复、易于扩展才是对逼格的更高挑战。比如有一组件对数据库有大量操作，我同事认为他要用C++模板元编程加上一些巧妙的设计模式来生成sql是逼格高的体现，我认为在这样的场景下至少要用上orm才能谈得上对逼格有要求。大胆预测，10年后，python程序员不一定会更多，但python一定会使用得更广泛得多
